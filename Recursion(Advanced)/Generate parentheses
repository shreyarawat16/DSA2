https://leetcode.com/problems/generate-parentheses/description/

class Solution {
public:
void solve(int open, int close, vector<string>& ans, string s){
    if(open==0 && close==0){
        ans.push_back(s);
        return;
    }
    if(open== close){
        s.push_back('(');
        solve(open-1, close, ans, s);
    }
    else if(open==0){
        s.push_back(')');
        solve(open, close-1, ans, s);
    }
    else if(close==0){
        s.push_back('(');
        solve(open-1, close, ans, s);
    }
    else{
       s.push_back('(');
       solve(open-1, close, ans,s);
       s.pop_back();
       s.push_back(')');
       solve(open, close-1, ans, s);
       s.pop_back();
    }
    
}
    vector<string> generateParenthesis(int n) {
         int open= n, close=n;
         vector<string> ans;
         string str;
         solve(open, close, ans, str);
         return ans;
    }
};
