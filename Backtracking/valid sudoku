https://leetcode.com/problems/valid-sudoku/submissions/1321797586/

class Solution {
public:

bool isValidSudoku(vector<vector<char>>& board) {
        //CHECK ROW
 for(int i=0; i<9; i++){
     unordered_set<char> check_row;
            for(int j=0; j<9; j++){
  if(board[i][j]!='.' && check_row.find(board[i][j])!= check_row.end() ){
                    return false;
                }
            check_row.insert(board[i][j]);
            }
        }
    //CHECK COLUMN
    for(int j=0; j<9; j++){
         unordered_set<char> check_col;
        for(int i=0; i<9; i++){
 if(board[i][j]!='.' && check_col.find(board[i][j])!= check_col.end()){
                    return false;
                }
            check_col.insert(board[i][j]);
        }
    }
    //CHECK 3*3 SUB BOXES
    vector<unordered_set<char>> check_boxes(9);
    for(int i=0; i<9; i++){
        for(int j=0; j<9; j++){
            int loc= 3*(i/3)+ j/3;
    if(board[i][j]!='.' && check_boxes[loc].find(board[i][j])!= check_boxes[loc].end()){
                return false;
            }
            check_boxes[loc].insert(board[i][j]);
        }
    }
    return true;
    }
};
