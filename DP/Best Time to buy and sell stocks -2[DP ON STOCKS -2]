https://leetcode.com/problems/best-time-to-buy-and-sell-stock-ii/submissions/1350742759/

class Solution {
public:
//TABULATION. TC: O(N*2), SC: O(N*2)
int maxProfit(vector<int>& prices) {
        //Express everything in terms of ind and buy
        //Jab tk mai sell nhi krdungi stock, I cannot buy another stock
        //So we have to make sure stock is sold
        int n = prices.size();
        vector<vector<int>> dp(n+1, vector<int>(2, 0));
        //BASE CASE
        
            dp[n][0]= dp[n][1]= 0;
        
        for(int i=n-1; i>=0; i--){
            for(int buy=0; buy<2; buy++){
                int profit=0;
              if(buy==1){
            profit= max( -prices[i]+ dp[i+1][0], 0+dp[i+1][1] );
            }
            else{
          profit= max( prices[i]+ dp[i+1][1],dp[i+1][0]);
            }
            dp[i][buy]= profit;
         }
    }
    return dp[0][1];
    }
//MEMOIZATION. TC: (N*2), SC:O(N*2)+ O(N)
/*
int solve(int i, int buy, vector<int>& arr, vector<vector<int>> dp){
    //BASE CASE
    if(i== arr.size()){
        return 0;
    }
     if(dp[i][buy]!= -1){
        return dp[i][buy];
     }
    if(buy==1){
    return dp[i][buy]= max( -arr[i]+ solve(i+1,0 , arr, dp), 0+solve(i+1, 1, arr, dp) );
    }
    else{
     return dp[i][buy]= max( arr[i]+solve(i+1,1, arr, dp), solve(i+1, 0, arr,dp));
    }
}
    int maxProfit(vector<int>& prices) {
        //Express everything in terms of ind and buy
        //Jab tk mai sell nhi krdungi stock, I cannot buy another stock
        //So we have to make sure stock is sold
        int n = prices.size();
        vector<vector<int>> dp(n, vector<int>(2, -1));
      int ans=  solve(0,1, prices, dp); //1 means you can buy a stock
      return ans;
    }
*/
//RECURSTION, TC; O(2^N), SC: O(N)= AUXILLARY STACK SPACE
/*
int solve(int i, int buy, vector<int>& arr){
    //BASE CASE
    if(i== arr.size()){
        return 0;
    }

    if(buy==1){
    return max( -arr[i]+ solve(i+1,0 , arr), 0+solve(i+1, 1, arr) );
    }
    else{
     return max( arr[i]+solve(i+1,1, arr), solve(i+1, 0, arr));
    }
}
    int maxProfit(vector<int>& prices) {
        //Express everything in terms of ind and buy
        //Jab tk mai sell nhi krdungi stock, I cannot buy another stock
        //So we have to make sure stock is sold
      int ans=  solve(0,1, prices); //1 means you can buy a stock
      return ans;
    }
    */
};
