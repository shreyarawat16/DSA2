int lcs(string s, string t)
{
	
        int n= s.size(), m= t.size();
        vector<vector<int>> dp(n+1, vector<int>(m+1,0));
        //BASE CASE
        for(int j=0; j<=m; j++){
          dp[0][j]=0;
        }
        for(int i=0; i<=n; i++){
           dp[i][0]=0;
        }
        //EXPLORE ALL POSSIBILITIES
        for(int i=1; i<=n; i++){
            for(int j=1; j<=m; j++){
                if(s[i-1]== t[j-1]){
                    dp[i][j]= 1+ dp[i-1][j-1];
                }
                else{
                int op1=  dp[i-1][j];
                int op2=  dp[i][j-1];
                dp[i][j]= max(op1, op2);
                }
            }
        }
        int len= dp[n][m];
        int ind = len-1;
        string ans= "";
        for(int i=0; i<len; i++ ){
            ans.push_back('$');
        }
       int i=n, j=m;
       while(i>0 && j>0){
           if(s[i-1] == t[j-1]){
               ans[ind]= s[i-1] ;
               ind--;
               i--, j--;
            }
           else if(dp[i-1][j] > dp[i][j-1]){
                  i--;
            }
            else{
                  j--;
            }
        }
    }
