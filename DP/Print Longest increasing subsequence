https://www.geeksforgeeks.org/problems/printing-longest-increasing-subsequence/0

class Solution {
  public:
    
        vector<int> longestIncreasingSubsequence(int n, vector<int>& arr) {
       vector<int> dp(n,1);
       vector<int> hash(n);
       int maxi= 1, ind=0;
       for(int i=0; i<n; i++){
           hash[i]=i;
           for(int j=0; j<i; j++){
               if(arr[j]< arr[i] && 1+ dp[j]> dp[i] ){
                   dp[i]= 1+ dp[j];
                   hash[i]= j;
               }
           }
           if(dp[i]> maxi){
           maxi=  dp[i];
           ind= i;
           }
         }
        vector<int> ans;
        ans.push_back(arr[ind]);
        while( hash[ind]!= ind){
           
             ind= hash[ind];
             ans.push_back(arr[ind]);
        }
        reverse(ans.begin(), ans.end());
        return ans;
    }
    
};
